name: Deploy Alexander

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Files
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t backexample:1.0 .

      - name: Save Docker image as tar file
        run: docker save -o backexample.tar backexample:1.0

      # - name: multiple command
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.REMOTE_SERVER_ADDRESS }}
      #     username: ${{ secrets.REMOTE_SERVER_USERNAME }}
      #     key: ${{ secrets.PRIVATE_KEY }}
      #     script: |
      #       if [ -f "backexample.tar" ]; then
      #       rm -rf backexample.tar
      #       else
      #       echo "File backexample.tar does not exist."
      #       fi

      # - name: Delete Files
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -tt ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
      #     if [ -f "backexample.tar" ]; then
      #       rm -rf backexample.tar
      #     else
      #       echo "File backexample.tar does not exist."
      #     fi
      #     ENDSSH

      # - name: remov Container and Images
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
      #     if [ "$(docker ps -a -q -f name=BackAle)" ]; then
      #       docker stop BackAle
      #     else
      #       echo "Container BackAle does not exist."
      #     fi
      #     if [ "$(docker ps -a -q -f name=BackAle)" ]; then
      #       docker rm -f BackAle
      #     else
      #       echo "Container BackAle does not exist."
      #     fi
      #     if [ "$(docker images -q backexample:1.0)" ]; then
      #       docker rmi -f backexample:1.0
      #     else
      #       echo "Image backexample:1.0 does not exist."
      #     fi
      #     ENDSSH

      - name: Transfer Docker image to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no backexample.tar ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Load Docker image on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker load -i ${{ secrets.REMOTE_SERVER_PATH }}/backexample.tar
          ENDSSH

      - name: Transfer Docker Compose file to remote server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yaml ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Deploy Docker containers using Docker Compose on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker compose -f ${{ secrets.REMOTE_SERVER_PATH }}/docker-compose.yaml up -d
          ENDSSH
